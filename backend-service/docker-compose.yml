version: '3.8'

services:
  # =================================================================
  # DATABASES & STORAGE
  # =================================================================
  
  mongodb:
    image: mongo:7
    container_name: dzinza-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - dzinza-network

  redis:
    image: redis:7-alpine
    container_name: dzinza-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass password123
    volumes:
      - redis_data:/data
    networks:
      - dzinza-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: dzinza-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - dzinza-network

  # =================================================================
  # MICROSERVICES
  # =================================================================

  api-gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    container_name: dzinza-api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - GATEWAY_PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3002
      - GENEALOGY_SERVICE_URL=http://genealogy-service:3001
      - STORAGE_SERVICE_URL=http://storage-service:3005
      - SEARCH_SERVICE_URL=http://search-service:3003
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    depends_on:
      - auth-service
      - genealogy-service
      - storage-service
      - search-service
    networks:
      - dzinza-network

  auth-service:
    build:
      context: .
      dockerfile: services/auth/Dockerfile
    container_name: dzinza-auth-service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dzinza_auth?authSource=admin
      - REDIS_URL=redis://:password123@redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-development
      - JWT_REFRESH_SECRET=your-super-secret-refresh-key-development
      - BCRYPT_SALT_ROUNDS=10
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - FROM_EMAIL=noreply@dzinza.com
    depends_on:
      - mongodb
      - redis
    networks:
      - dzinza-network

  genealogy-service:
    build:
      context: .
      dockerfile: services/genealogy/Dockerfile
    container_name: dzinza-genealogy-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dzinza_genealogy?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-development
    depends_on:
      - mongodb
    networks:
      - dzinza-network

  storage-service:
    build:
      context: .
      dockerfile: services/storage/Dockerfile
    container_name: dzinza-storage-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - STORAGE_SERVICE_PORT=3005
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dzinza_storage?authSource=admin
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - MAX_FILE_SIZE=104857600
    depends_on:
      - mongodb
    networks:
      - dzinza-network

  search-service:
    build:
      context: .
      dockerfile: services/search/Dockerfile
    container_name: dzinza-search-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - SEARCH_SERVICE_PORT=3003
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dzinza_search?authSource=admin
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - dzinza-network

  # =================================================================
  # MONITORING & UTILITIES
  # =================================================================

  mongo-express:
    image: mongo-express:latest
    container_name: dzinza-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - dzinza-network
    profiles: ["monitoring"]

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: dzinza-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:password123
    depends_on:
      - redis
    networks:
      - dzinza-network
    profiles: ["monitoring"]

  elasticsearch-head:
    image: mobz/elasticsearch-head:5
    container_name: dzinza-elasticsearch-head
    restart: unless-stopped
    ports:
      - "9100:9100"
    depends_on:
      - elasticsearch
    networks:
      - dzinza-network
    profiles: ["monitoring"]

# =================================================================
# NETWORKS & VOLUMES
# =================================================================

networks:
  dzinza-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  elasticsearch_data:
    driver: local
