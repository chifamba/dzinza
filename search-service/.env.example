# Search Service - Environment Variables Example
# Copy this file to .env in the search-service directory and update values.
# ==============================================================================
# IMPORTANT: Security and Configuration Template
# ==============================================================================
# This file (`.env.example`) serves as a TEMPLATE for the actual `.env`
# configuration file used by this service.
#
# **DO NOT use this file directly in production or development.**
#
# 1. **COPY THIS FILE:** Create a new file named `.env` in the same directory.
# 2. **REPLACE ALL PLACEHOLDERS:** You **MUST** replace all placeholder values,
#    especially for secrets (passwords, API keys, etc.), with strong,
#    unique, and random values suitable for your environment.
# 3. **NEVER COMMIT `.env` FILES:** Ensure your actual `.env` file containing
#    sensitive credentials is listed in your `.gitignore` file.
# ==============================================================================

# Application Configuration
NODE_ENV=development
SEARCH_SERVICE_PORT=3003 # Port for the service
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173 # Your frontend URL(s)

# Database Configuration (MongoDB - for search logs/analytics if used, or other metadata)
MONGODB_URI=mongodb://localhost:27017/dzinza_search

# Elasticsearch Configuration
ELASTICSEARCH_NODE=http://localhost:9200 # Single node or load balancer
ELASTICSEARCH_USERNAME= # Optional: if your Elasticsearch is secured
ELASTICSEARCH_PASSWORD=CHANGE_THIS_TO_YOUR_ELASTICSEARCH_PASSWORD_IF_USED
ELASTICSEARCH_API_KEY= # Optional: if using API key authentication
ELASTICSEARCH_INDEX_PREFIX=dzinza_ # Prefix for indices

# OpenTelemetry Tracing Configuration (Jaeger)
ENABLE_TRACING=true # Set to 'true' to enable OpenTelemetry tracing
OTEL_SERVICE_NAME=search-service # OpenTelemetry service name for this instance
JAEGER_ENDPOINT=http://localhost:4318/v1/traces # Jaeger OTLP HTTP endpoint

# Logging
LOG_LEVEL=info # (debug, info, warn, error)

# JWT Secret (if service needs to validate tokens independently, should be same as auth-service)
# JWT_SECRET=CHANGE_THIS_TO_THE_SHARED_JWT_SECRET_IF_VALIDATING_TOKENS_LOCALLY
