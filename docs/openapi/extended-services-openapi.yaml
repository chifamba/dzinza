openapi: 3.1.0
info:
  title: Extended Services for Community Genealogy Platform
  description: >
    OpenAPI specification for additional services:
    Search, Audit, Media, Graph, Localization, Analytics, Admin.
  version: 1.0.0

paths:
  ###############################
  # Search & Discovery Service #
  ###############################
  /search/person:
    get:
      summary: Search for persons
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: birthDate
          schema:
            type: string
            format: date
        - in: query
          name: location
          schema:
            type: string
      responses:
        "200":
          description: List of matching persons

  ########################
  # Audit & History API #
  ########################
  /audit/logs:
    get:
      summary: Retrieve audit logs
      parameters:
        - in: query
          name: entityId
          schema:
            type: string
        - in: query
          name: entityType
          schema:
            type: string
        - in: query
          name: userId
          schema:
            type: string
      responses:
        "200":
          description: List of audit entries

  #############################
  # Media Storage Service API #
  #############################
  /media/upload:
    post:
      summary: Upload a file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                associatedPersonId:
                  type: string
      responses:
        "201":
          description: File uploaded

  /media/{mediaId}:
    get:
      summary: Retrieve media metadata
      parameters:
        - in: path
          name: mediaId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Media metadata

  ############################
  # Graph Query Service API #
  ############################
  /graph/traverse:
    post:
      summary: Traverse graph relationships
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                startPersonId:
                  type: string
                depth:
                  type: integer
                direction:
                  type: string
                  enum: [up, down, both]
      responses:
        "200":
          description: Graph traversal result

  #################################
  # Localization & Language API   #
  #################################
  /localization/translate:
    get:
      summary: Translate a term or phrase
      parameters:
        - in: query
          name: text
          schema:
            type: string
        - in: query
          name: lang
          schema:
            type: string
      responses:
        "200":
          description: Translated text

  ############################
  # Analytics & Insights API #
  ############################
  /analytics/usage:
    get:
      summary: Get user and activity stats
      responses:
        "200":
          description: Usage stats

  /analytics/top-contributors:
    get:
      summary: List top contributing users
      responses:
        "200":
          description: Contributor list

  ###########################
  # Admin & Moderation API #
  ###########################
  /admin/reports:
    get:
      summary: Get user-submitted reports
      responses:
        "200":
          description: List of reports

  /admin/users/{userId}/ban:
    post:
      summary: Ban a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: User banned

  ###############################
  # Community Marketplace API   #
  ###############################
  /marketplace/items:
    get:
      summary: List marketplace items
      responses:
        "200":
          description: List of marketplace items
    post:
      summary: Create a marketplace item
      responses:
        "201":
          description: Marketplace item created

  /marketplace/items/{id}:
    get:
      summary: Get a marketplace item by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Marketplace item details
        "404":
          description: Item not found
    put:
      summary: Update a marketplace item
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Marketplace item updated
        "404":
          description: Item not found
    delete:
      summary: Delete a marketplace item
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Item deleted
        "404":
          description: Item not found

  #####################################
  # Relationship Verification API     #
  #####################################
  /relationship-suggestions:
    get:
      summary: List relationship suggestions with optional filtering
      responses:
        "200":
          description: List of relationship suggestions
    post:
      summary: Create a relationship suggestion
      responses:
        "201":
          description: Relationship suggestion created

  /relationship-suggestions/{id}:
    get:
      summary: Get a relationship suggestion by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Relationship suggestion details
        "404":
          description: Relationship suggestion not found
    put:
      summary: Confirm or reject a relationship suggestion
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Relationship suggestion updated with confirmation
        "404":
          description: Relationship suggestion not found

  ###############################
  # Deduplication Service API   #
  ###############################
  /duplicates/check:
    post:
      summary: Check duplicates for a person
      responses:
        "200":
          description: List of possible duplicates

  /duplicates/suggestions:
    get:
      summary: List duplicate suggestions
      responses:
        "200":
          description: List of duplicate suggestions

  /duplicates/suggestions/{id}:
    put:
      summary: Approve or reject duplicate suggestion (merge)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Duplicate suggestion updated
        "404":
          description: Duplicate suggestion not found
