# Paths for Historical Records Service (Planned)

/historical-records:
  post:
    tags:
      - Historical Records
    summary: Upload a new historical record (Planned)
    operationId: uploadHistoricalRecord
    x-implementation-status: "planned"
    x-planned-version: "1.2" # Example version
    description: "Endpoint for uploading historical record files and metadata. Specific request body to be defined."
    requestBody:
      required: true
      content:
        application/json: # Or multipart/form-data if file is included
          schema:
            type: object # Placeholder - define HistoricalRecordCreate schema
            properties:
              title: { type: string, example: "Census Record 1920" }
              # ... other metadata fields and potentially file upload part
    responses:
      '201':
        description: Historical record created.
        content:
          application/json:
            schema:
              type: object # Placeholder - define HistoricalRecordRead schema
      '400': { $ref: '../openapi.yaml#/components/responses/BadRequest' } # Assuming common responses defined
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
    security:
      - bearerAuth: []
  get:
    tags:
      - Historical Records
    summary: List historical records (Planned)
    operationId: listHistoricalRecords
    x-implementation-status: "planned"
    x-planned-version: "1.2"
    description: "Endpoint for listing historical records with filtering and pagination. Parameters and response to be defined."
    parameters:
      - name: type
        in: query
        schema: { type: string }
      - name: skip
        in: query
        schema: { type: integer, default: 0 }
      - name: limit
        in: query
        schema: { type: integer, default: 100 }
    responses:
      '200':
        description: A list of historical records.
        content:
          application/json:
            schema:
              type: array # Placeholder - define HistoricalRecordListResponse
              items:
                type: object
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
    security:
      - bearerAuth: []

/historical-records/{record_id}:
  get:
    tags:
      - Historical Records
    summary: Get a specific historical record by ID (Planned)
    operationId: getHistoricalRecordById
    x-implementation-status: "planned"
    x-planned-version: "1.2"
    parameters:
      - name: record_id
        in: path
        required: true
        schema:
          type: string
          format: uuid # Or appropriate format
    responses:
      '200':
        description: Details of the historical record.
        content:
          application/json:
            schema:
              type: object # Placeholder - define HistoricalRecordRead schema
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
      '404': { $ref: '../openapi.yaml#/components/responses/NotFound' }
    security:
      - bearerAuth: []
  put:
    tags:
      - Historical Records
    summary: Update a historical record (Planned)
    operationId: updateHistoricalRecord
    x-implementation-status: "planned"
    x-planned-version: "1.2"
    parameters:
      - name: record_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object # Placeholder - define HistoricalRecordUpdate schema
    responses:
      '200':
        description: Historical record updated.
      '400': { $ref: '../openapi.yaml#/components/responses/BadRequest' }
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
      '404': { $ref: '../openapi.yaml#/components/responses/NotFound' }
    security:
      - bearerAuth: []
  delete:
    tags:
      - Historical Records
    summary: Delete a historical record (Planned)
    operationId: deleteHistoricalRecord
    x-implementation-status: "planned"
    x-planned-version: "1.2"
    parameters:
      - name: record_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '204':
        description: Historical record deleted.
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
      '404': { $ref: '../openapi.yaml#/components/responses/NotFound' }
    security:
      - bearerAuth: []
