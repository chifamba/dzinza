# Paths for Collaboration Features (Planned)

/family-trees/{tree_id}/collaborators:
  post:
    tags:
      - Family Trees
      - Collaboration
    summary: Invite or add a collaborator to a family tree (Planned)
    operationId: addTreeCollaborator
    x-implementation-status: "planned"
    x-planned-version: "1.2"
    parameters:
      - name: tree_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object # Placeholder - define CollaboratorInviteRequest (e.g., user_email, role)
            properties:
              user_email:
                type: string
                format: email
              role:
                $ref: '../schemas/GenealogyCommon.yaml#/CollaboratorRole'
    responses:
      '201':
        description: Collaborator added or invitation sent.
        content:
          application/json:
            schema:
              $ref: '../schemas/FamilyTree.yaml#/Collaborator' # Or a specific invite response
      '400': { $ref: '../openapi.yaml#/components/responses/BadRequest' }
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
      '403': { $ref: '../openapi.yaml#/components/responses/Forbidden' }
      '404': { $ref: '../openapi.yaml#/components/responses/NotFound' } # Tree not found
    security:
      - bearerAuth: []
  get:
    tags:
      - Family Trees
      - Collaboration
    summary: List collaborators for a family tree (Planned)
    operationId: listTreeCollaborators
    x-implementation-status: "planned"
    x-planned-version: "1.2"
    parameters:
      - name: tree_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: A list of collaborators.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/FamilyTree.yaml#/Collaborator'
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
      '403': { $ref: '../openapi.yaml#/components/responses/Forbidden' }
      '404': { $ref: '../openapi.yaml#/components/responses/NotFound' }
    security:
      - bearerAuth: []

/family-trees/{tree_id}/collaborators/{user_id}:
  put:
    tags:
      - Family Trees
      - Collaboration
    summary: Update a collaborator's role on a family tree (Planned)
    operationId: updateTreeCollaboratorRole
    x-implementation-status: "planned"
    x-planned-version: "1.2"
    parameters:
      - name: tree_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id # ID of the collaborator
        in: path
        required: true
        schema:
          type: string
          # format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              role:
                $ref: '../schemas/GenealogyCommon.yaml#/CollaboratorRole'
            required:
              - role
    responses:
      '200':
        description: Collaborator role updated.
        content:
          application/json:
            schema:
              $ref: '../schemas/FamilyTree.yaml#/Collaborator'
      '400': { $ref: '../openapi.yaml#/components/responses/BadRequest' }
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
      '403': { $ref: '../openapi.yaml#/components/responses/Forbidden' }
      '404': { $ref: '../openapi.yaml#/components/responses/NotFound' } # Tree or collaborator not found
    security:
      - bearerAuth: []
  delete:
    tags:
      - Family Trees
      - Collaboration
    summary: Remove a collaborator from a family tree (Planned)
    operationId: removeTreeCollaborator
    x-implementation-status: "planned"
    x-planned-version: "1.2"
    parameters:
      - name: tree_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          # format: uuid
    responses:
      '204':
        description: Collaborator removed successfully.
      '401': { $ref: '../openapi.yaml#/components/responses/Unauthorized' }
      '403': { $ref: '../openapi.yaml#/components/responses/Forbidden' }
      '404': { $ref: '../openapi.yaml#/components/responses/NotFound' }
    security:
      - bearerAuth: []

# Generic Comments (Example, actual paths might be more specific)
# /comments:
#   post:
#     tags: [Collaboration, Comments]
#     summary: Add a comment to an entity (Planned)
#     x-implementation-status: "planned"
#     # ... further definition ...

# /entities/{entity_type}/{entity_id}/comments:
#   get:
#     tags: [Collaboration, Comments]
#     summary: List comments for a specific entity (Planned)
#     x-implementation-status: "planned"
#     # ... further definition ...
