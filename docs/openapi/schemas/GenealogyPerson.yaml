# Person Schemas (Genealogical Entities)

PersonName:
  type: object
  properties:
    given_name:
      type: string
      maxLength: 100
      nullable: true
    surname:
      type: string
      maxLength: 100
      nullable: true
    prefix:
      type: string
      maxLength: 50
      nullable: true
      description: e.g., Dr., Rev.
    suffix:
      type: string
      maxLength: 50
      nullable: true
      description: e.g., Jr., Sr., III
    nickname:
      type: string
      maxLength: 100
      nullable: true
    full_name: # Read-only convenience property
      type: string
      readOnly: true
      description: Automatically generated full name.
  # No required fields, as a person might be known by only one name part initially.

Fact: # Generic fact or attribute about a person
  type: object
  properties:
    type:
      type: string
      description: Type of fact (e.g., "Occupation", "Education", "Nationality").
    value:
      type: string
      description: Value of the fact.
    date_string:
      type: string
      nullable: true
      description: Date associated with the fact (e.g., "about 1900", "Spring 1888").
    place:
      type: string
      nullable: true
      description: Place associated with the fact.
    description:
      type: string
      nullable: true
      description: Additional description for the fact.
  required:
    - type
    - value

Identifier: # For Person identifiers
  type: object
  properties:
    type:
      $ref: './GenealogyCommon.yaml#/IdentifierType'
    value:
      type: string
      maxLength: 255
    verification_status:
      $ref: './GenealogyCommon.yaml#/VerificationStatus'
      default: Unverified
    notes:
      type: string
      maxLength: 500
      nullable: true
  required:
    - type
    - value

PersonPrivacySettings: # Granular privacy for Person details
  type: object
  properties:
    show_profile:
      $ref: './GenealogyCommon.yaml#/PersonPrivacyOptions'
      default: family_tree_only
    show_birth_date:
      $ref: './GenealogyCommon.yaml#/PersonPrivacyOptions'
      default: family_tree_only
    show_death_date:
      $ref: './GenealogyCommon.yaml#/PersonPrivacyOptions'
      default: family_tree_only
    # Add more granular settings as needed

# Base Person structure (reflects DBModelMixin + Person fields from models_main.py)
PersonBase:
  type: object
  properties:
    tree_ids: # List of FamilyTree IDs this person belongs to
      type: array
      items:
        type: string
        format: uuid
      default: []
    primary_name:
      $ref: '#/PersonName'
    alternate_names:
      type: array
      items:
        $ref: '#/PersonName'
      default: []
    gender:
      $ref: './GenealogyCommon.yaml#/Gender'
      default: unknown
    birth_date_string:
      type: string
      nullable: true
      description: User input for birth date, e.g., "Abt. 1880", "Jan 1900".
    birth_date_exact:
      type: string
      format: date # YYYY-MM-DD
      nullable: true
      description: Exact birth date if known.
    birth_place:
      type: string
      maxLength: 255
      nullable: true
    is_birth_date_estimated:
      type: boolean
      default: false
    death_date_string:
      type: string
      nullable: true
    death_date_exact:
      type: string
      format: date # YYYY-MM-DD
      nullable: true
    death_place:
      type: string
      maxLength: 255
      nullable: true
    is_death_date_estimated:
      type: boolean
      default: false
    cause_of_death:
      type: string
      maxLength: 255
      nullable: true
    is_living:
      type: boolean
      default: true # Validator in model might override based on death date
    identifiers:
      type: array
      items:
        $ref: '#/Identifier'
      default: []
    biography:
      type: string
      nullable: true
      description: Biographical text.
    notes:
      type: string
      nullable: true
      description: General research notes for this person.
    profile_image_url:
      type: string
      format: url
      nullable: true
      readOnly: true # Usually derived from profile_image_id and storage service
    profile_image_id: # Reference to an image in the storage service
      type: string
      format: uuid
      nullable: true
    clan:
      type: string
      maxLength: 100
      nullable: true
    tribe:
      type: string
      maxLength: 100
      nullable: true
    traditional_titles:
      type: array
      items:
        type: string
      default: []
    privacy_settings:
      $ref: '#/PersonPrivacySettings'
    facts:
      type: array
      items:
        $ref: '#/Fact'
      default: []
    potential_duplicates: # List of Person IDs that might be duplicates
      type: array
      items:
        type: string
        format: uuid
      default: []
      readOnly: true
    merged_into_id: # If this person was merged into another
      type: string
      format: uuid
      nullable: true
      readOnly: true
    merged_from_ids: # List of Person IDs that were merged into this one
      type: array
      items:
        type: string
        format: uuid
      default: []
      readOnly: true
  required:
    - primary_name # A person must have at least some name components

# Schema for creating a Person
PersonCreate: # Based on models_main.py PersonCreate
  type: object
  properties:
    tree_ids:
      type: array
      items:
        type: string
        format: uuid
      description: One or more tree IDs this person initially belongs to.
      minItems: 1
    primary_name:
      $ref: '#/PersonName'
    gender:
      $ref: './GenealogyCommon.yaml#/Gender'
      default: unknown
    birth_date_string:
      type: string
      nullable: true
    birth_date_exact:
      type: string
      format: date
      nullable: true
    birth_place:
      type: string
      nullable: true
    is_birth_date_estimated:
      type: boolean
      default: false
    death_date_string:
      type: string
      nullable: true
    death_date_exact:
      type: string
      format: date
      nullable: true
    death_place:
      type: string
      nullable: true
    is_death_date_estimated:
      type: boolean
      default: false
    cause_of_death:
      type: string
      nullable: true
    is_living: # Let model validator determine if not provided explicitly
      type: boolean
      nullable: true
    biography:
      type: string
      nullable: true
    notes:
      type: string
      nullable: true
    profile_image_id:
      type: string
      format: uuid
      nullable: true
    clan:
      type: string
      nullable: true
    tribe:
      type: string
      nullable: true
    traditional_titles:
      type: array
      items:
        type: string
      nullable: true
      default: []
    privacy_settings:
      $ref: '#/PersonPrivacySettings'
      nullable: true
    facts:
      type: array
      items:
        $ref: '#/Fact'
      nullable: true
      default: []
    identifiers:
      type: array
      items:
        $ref: '#/Identifier'
      nullable: true
      default: []
  required:
    - tree_ids
    - primary_name

# Schema for updating a Person
PersonUpdate: # Based on schemas/person.py PersonUpdate
  type: object
  properties:
    # All fields from PersonBase can be optional here
    primary_name:
      $ref: '#/PersonName'
      nullable: true
    alternate_names:
      type: array
      items:
        $ref: '#/PersonName'
      nullable: true
    gender:
      $ref: './GenealogyCommon.yaml#/Gender'
      nullable: true
    birth_date_string:
      type: string
      nullable: true
    birth_date_exact:
      type: string
      format: date
      nullable: true
    birth_place:
      type: string
      nullable: true
    is_birth_date_estimated:
      type: boolean
      nullable: true
    death_date_string:
      type: string
      nullable: true
    death_date_exact:
      type: string
      format: date
      nullable: true
    death_place:
      type: string
      nullable: true
    is_death_date_estimated:
      type: boolean
      nullable: true
    cause_of_death:
      type: string
      nullable: true
    is_living:
      type: boolean
      nullable: true
    identifiers:
      type: array
      items:
        $ref: '#/Identifier'
      nullable: true
    biography:
      type: string
      nullable: true
    notes:
      type: string
      nullable: true
    profile_image_id:
      type: string
      format: uuid
      nullable: true
    clan:
      type: string
      nullable: true
    tribe:
      type: string
      nullable: true
    traditional_titles:
      type: array
      items:
        type: string
      nullable: true
    privacy_settings:
      $ref: '#/PersonPrivacySettings'
      nullable: true
    facts:
      type: array
      items:
        $ref: '#/Fact'
      nullable: true
    tree_ids: # Allow updating tree associations, though specific link/unlink endpoints are preferred
      type: array
      items:
        type: string
        format: uuid
      nullable: true
  minProperties: 1 # Must provide at least one field to update

# Schema for reading/returning a Person
PersonRead:
  allOf:
    - $ref: './GenealogyCommon.yaml#/DBModelMixinEffect' # id, created_at, updated_at
    - $ref: '#/PersonBase' # All other fields

# Summary view of a Person
PersonSummary: # Based on schemas/person.py PersonSummary
  type: object
  properties:
    id:
      type: string
      format: uuid
    primary_name:
      $ref: '#/PersonName' # Or a simpler string representation if desired for summary
    gender:
      $ref: './GenealogyCommon.yaml#/Gender'
    is_living:
      type: boolean
    birth_date_string:
      type: string
      nullable: true
    death_date_string:
      type: string
      nullable: true
  required:
    - id
    - primary_name
    - gender
    - is_living

# Schema for a list of Persons with pagination
PersonListResponse: # Corresponds to PersonList in schemas/person.py
  type: object
  properties:
    items:
      type: array
      items:
        $ref: '#/PersonRead'
    total:
      type: integer
  required:
    - items
    - total
