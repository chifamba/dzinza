# Genealogical Event Schemas (Top-level events, distinct from PersonHistory or embedded RelationshipEvent)

# Base Event structure
EventBase:
  type: object
  properties:
    tree_id:
      type: string
      format: uuid
      description: ID of the family tree this event belongs to.
    primary_person_id:
      type: string
      format: uuid
      nullable: true
      description: ID of the primary person associated with this event (e.g., person born, person who died).
    secondary_person_id:
      type: string
      format: uuid
      nullable: true
      description: ID of a secondary person associated with this event (e.g., other parent in a birth, spouse in a marriage if event is not on Relationship itself).
    relationship_id: # Link to a Relationship record if this event pertains to it
      type: string
      format: uuid
      nullable: true
      description: ID of a relationship this event is associated with (e.g., marriage event for a specific spousal relationship).
    event_type:
      $ref: './GenealogyCommon.yaml#/EventType'
    custom_event_type_name:
      type: string
      maxLength: 100 # From model, though schema didn't specify
      nullable: true
      description: Name of the event type if `event_type` is 'custom'.
    date_string:
      type: string
      nullable: true
      description: User-provided date string for the event (e.g., "Summer 1980").
    date_exact:
      type: string
      format: date # YYYY-MM-DD
      nullable: true
      description: Exact date of the event.
    place_name:
      type: string
      maxLength: 255
      nullable: true
      description: Name of the place where the event occurred.
    description:
      type: string
      maxLength: 1000
      nullable: true
      description: Detailed description of the event.
    notes:
      type: string
      maxLength: 1000
      nullable: true
      description: Additional notes about the event.
    # media_ids: # Links to media items in storage-service
    #   type: array
    #   items:
    #     type: string
    #     format: uuid
    #   default: []
    # source_ids: # Links to source/citation records (Future feature)
    #   type: array
    #   items:
    #     type: string
    #     format: uuid
    #   default: []
  required:
    - tree_id
    - event_type
    # primary_person_id or relationship_id usually required depending on event context

# Schema for creating an Event
EventCreate:
  allOf:
    - $ref: '#/EventBase'
    # No additional fields for create beyond base, system sets id/timestamps

# Schema for updating an Event
EventUpdate:
  type: object # All fields from EventBase are optional for update
  properties:
    primary_person_id:
      type: string
      format: uuid
      nullable: true
    secondary_person_id:
      type: string
      format: uuid
      nullable: true
    relationship_id:
      type: string
      format: uuid
      nullable: true
    event_type:
      $ref: './GenealogyCommon.yaml#/EventType'
      nullable: true
    custom_event_type_name:
      type: string
      maxLength: 100
      nullable: true
    date_string:
      type: string
      nullable: true
    date_exact:
      type: string
      format: date
      nullable: true
    place_name:
      type: string
      maxLength: 255
      nullable: true
    description:
      type: string
      maxLength: 1000
      nullable: true
    notes:
      type: string
      maxLength: 1000
      nullable: true
    # media_ids:
    #   type: array
    #   items:
    #     type: string
    #     format: uuid
    #   nullable: true
    # source_ids:
    #   type: array
    #   items:
    #     type: string
    #     format: uuid
    #   nullable: true
  minProperties: 1 # Must provide at least one field to update

# Schema for reading/returning an Event
EventRead:
  allOf:
    - $ref: './GenealogyCommon.yaml#/DBModelMixinEffect' # id, created_at, updated_at
    - $ref: '#/EventBase'

# Schema for a list of Events
EventListResponse:
  type: object
  properties:
    items:
      type: array
      items:
        $ref: '#/EventRead'
    total:
      type: integer
  required:
    - items
    - total
