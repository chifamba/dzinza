# Relationship Schemas

RelationshipEvent: # Embedded in Relationship model
  type: object
  properties:
    event_type: # Example: "Marriage", "Divorce", "PartnershipStart"
      type: string
      description: Type of event related to the relationship.
    date_string:
      type: string
      nullable: true
      description: User-provided date string for the event.
    date_exact:
      type: string
      format: date # YYYY-MM-DD
      nullable: true
      description: Exact date of the event.
    place:
      type: string
      maxLength: 255
      nullable: true
      description: Place where the event occurred.
    description:
      type: string
      maxLength: 500
      nullable: true
      description: Description of the event.
  required:
    - event_type

# Base Relationship structure
RelationshipBase:
  type: object
  properties:
    tree_id:
      type: string
      format: uuid
      description: ID of the family tree this relationship belongs to.
    person1_id:
      type: string
      format: uuid
      description: ID of the first person in the relationship.
    person2_id:
      type: string
      format: uuid
      description: ID of the second person in the relationship.
    relationship_type:
      $ref: './GenealogyCommon.yaml#/RelationshipType'
    # Optional attributes based on relationship_type
    parental_role_person1:
      $ref: './GenealogyCommon.yaml#/ParentalRole'
      nullable: true
      description: Role of person1 towards person2, if a parent-child type relationship.
    parental_role_person2:
      $ref: './GenealogyCommon.yaml#/ParentalRole'
      nullable: true
      description: Role of person2 towards person1 (e.g., for child's perspective in parent-child).
    spousal_status:
      $ref: './GenealogyCommon.yaml#/SpousalStatus'
      nullable: true
      description: Status if relationship_type is SPOUSE or similar.
    start_date_string:
      type: string
      nullable: true
      description: User-provided start date string for the relationship.
    start_date_exact:
      type: string
      format: date
      nullable: true
      description: Exact start date of the relationship.
    end_date_string:
      type: string
      nullable: true
      description: User-provided end date string for the relationship.
    end_date_exact:
      type: string
      format: date
      nullable: true
      description: Exact end date of the relationship.
    place:
      type: string
      maxLength: 255
      nullable: true
      description: Place associated with the relationship (e.g., place of marriage).
    notes:
      type: string
      maxLength: 1000
      nullable: true
      description: Notes about the relationship.
    events:
      type: array
      items:
        $ref: '#/RelationshipEvent'
      default: []
      description: Events specific to this relationship (e.g., marriage ceremony, divorce date).
  required:
    - tree_id
    - person1_id
    - person2_id
    - relationship_type

# Schema for creating a Relationship
RelationshipCreate:
  allOf:
    - $ref: '#/RelationshipBase'
    # No additional fields for create beyond base, system sets id/timestamps

# Schema for updating a Relationship
RelationshipUpdate:
  type: object
  properties: # All fields from RelationshipBase are optional for update
    relationship_type:
      $ref: './GenealogyCommon.yaml#/RelationshipType'
      nullable: true
    parental_role_person1:
      $ref: './GenealogyCommon.yaml#/ParentalRole'
      nullable: true
    parental_role_person2:
      $ref: './GenealogyCommon.yaml#/ParentalRole'
      nullable: true
    spousal_status:
      $ref: './GenealogyCommon.yaml#/SpousalStatus'
      nullable: true
    start_date_string:
      type: string
      nullable: true
    start_date_exact:
      type: string
      format: date
      nullable: true
    end_date_string:
      type: string
      nullable: true
    end_date_exact:
      type: string
      format: date
      nullable: true
    place:
      type: string
      maxLength: 255
      nullable: true
    notes:
      type: string
      maxLength: 1000
      nullable: true
    events:
      type: array
      items:
        $ref: '#/RelationshipEvent'
      nullable: true
  minProperties: 1 # Must provide at least one field to update

# Schema for reading/returning a Relationship
RelationshipRead:
  allOf:
    - $ref: './GenealogyCommon.yaml#/DBModelMixinEffect' # id, created_at, updated_at
    - $ref: '#/RelationshipBase'

# Schema for a list of Relationships
RelationshipListResponse:
  type: object
  properties:
    items:
      type: array
      items:
        $ref: '#/RelationshipRead'
    total:
      type: integer
  required:
    - items
    - total
