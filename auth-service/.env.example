# Backend Authentication Service - Environment Variables Example

# Application Configuration
NODE_ENV=development
PORT=3002
SERVICE_NAME=auth-service

# Database Configuration
MONGODB_URI=mongodb://localhost:27017/dzinza_auth
DB_NAME=dzinza_auth

# Redis Configuration (Optional, for session management or caching)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# JWT Configuration
JWT_SECRET=your-jwt-secret-key
JWT_EXPIRES_IN=1h
REFRESH_TOKEN_SECRET=your-refresh-token-secret-key
REFRESH_TOKEN_EXPIRES_IN=7d

# Security Configuration
BCRYPT_ROUNDS=12
CORS_ORIGIN=http://localhost:3000 # Adjust for your frontend URL
RATE_LIMIT_WINDOW_MS=900000 # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100
AUTH_RATE_LIMIT_MAX=10 # Max auth attempts (login, register, password reset) per window

# Email Configuration
# For development, you can use services like Ethereal (https://ethereal.email/)
# or Mailtrap (https://mailtrap.io/). For production, use a transactional email service.
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_SECURE=false # true for SSL/TLS, false for STARTTLS or no encryption
SMTP_USER=your_smtp_username
SMTP_PASS=your_smtp_password
FROM_EMAIL=noreply@yourdomain.com
FROM_NAME="Your Application Name"

# Frontend URL (Used for generating links in emails, etc.)
FRONTEND_URL=http://localhost:3000

# MFA Configuration (If applicable)
MFA_ISSUER="Your Application Name"
MFA_WINDOW=1 # Number of valid previous/next OTPs to check

# Logging Configuration
LOG_LEVEL=info # (debug, info, warn, error)
LOG_FORMAT=combined # (dev, combined, json)

# Session Configuration (If using sessions)
SESSION_SECRET=your-session-secret-key
SESSION_EXPIRES_IN=86400000 # 1 day in milliseconds

# Account Security Settings
MAX_LOGIN_ATTEMPTS=5
ACCOUNT_LOCKOUT_TIME=900000 # 15 minutes in milliseconds
PASSWORD_RESET_EXPIRES=3600000 # 1 hour in milliseconds
EMAIL_VERIFICATION_EXPIRES=86400000 # 24 hours in milliseconds

# Development Specific Flags
ENABLE_SWAGGER=true # Set to false in production if not needed
SKIP_EMAIL_VERIFICATION=false # For development, to bypass email verification flow
ENABLE_DEBUG=false # Enable more verbose debugging, use with caution in production

# Google OAuth2 Configuration
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here
# Ensure this callback URL is registered in your Google Cloud Console project for the client ID.
# The path should match the one defined in `src/routes/socialAuth.ts`.
# Example: http://localhost:PORT/social/google/callback (replace PORT with actual)
GOOGLE_CALLBACK_URL=http://localhost:3002/social/google/callback
