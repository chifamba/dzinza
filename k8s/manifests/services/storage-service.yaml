apiVersion: apps/v1
kind: Deployment
metadata:
  name: storage-service
  namespace: dzinza
  labels:
    app: storage-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: storage-service
      version: v1
  template:
    metadata:
      labels:
        app: storage-service
        version: v1
    spec:
      containers:
        - name: storage-service
          image: dzinza/storage-service:latest
          ports:
            - containerPort: 8000
          env:
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: DEBUG
            - name: MONGO_HOST
              value: "mongodb-service"
            - name: MONGO_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: MONGODB_STORAGE_DB
            - name: MONGO_USER
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: DB_USER
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dzinza-secrets
                  key: mongo_password
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: AWS_REGION
            - name: S3_ENDPOINT_URL
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: S3_ENDPOINT_URL
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: dzinza-secrets
                  key: aws_access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: dzinza-secrets
                  key: aws_secret_access_key
            - name: S3_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: S3_BUCKET_NAME
            - name: S3_FORCE_PATH_STYLE
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: S3_FORCE_PATH_STYLE
            - name: S3_CREATE_BUCKET_IF_NOT_EXISTS
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: S3_CREATE_BUCKET_IF_NOT_EXISTS
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: dzinza-secrets
                  key: jwt_secret
            - name: JWT_ALGORITHM
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: JWT_ALGORITHM
            - name: JWT_AUDIENCE
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: JWT_AUDIENCE
            - name: OTEL_SERVICE_NAME
              value: "storage-service"
            - name: JAEGER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: JAEGER_ENDPOINT
            - name: PYTHONUNBUFFERED
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: PYTHONUNBUFFERED
            - name: PYTHONDONTWRITEBYTECODE
              valueFrom:
                configMapKeyRef:
                  name: dzinza-config
                  key: PYTHONDONTWRITEBYTECODE
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: storage-service
  namespace: dzinza
  labels:
    app: storage-service
spec:
  selector:
    app: storage-service
  ports:
    - port: 8000
      targetPort: 8000
      name: http
  type: ClusterIP
